#!/bin/bash
############################################################################
# /usr/bin/lg3d-setup 0.2.1
#
# lg3d-setup search path are
#   - JAVA_HOME
#   - /opt/lg3d
#   - /usr/java
#

############################################################################
# Setting default variables
############################################################################

# prefix of lg3d binary : default /opt/lg3d
LG3D_PREFIX=/opt/lg3d

# lg3d-dev/lg3d-session output path : default /usr/bin
BIN_PREFIX=/usr/bin

# If you do not want to check JAI/Java3D version with lg3d_rpm_utils.jar,
# please set false to VERCHK environment 
VERCHK="true"

# Please set required JAI version, Java3D version
# Default : JAI >= 1.1.2, Java3D >= 1.4
JAI_VERSION=1.1.2
JAVA3D_VERSION=1.4

# Search Path
SEARCH_PATH="/opt/lg3d /usr/java"


# JAVA_HOME : If you want to set JAVA_HOME force, please uncomment and set variable
#JAVA_HOME=/usr/java/j2sedefault

# When JAVA_HOME variable defined, add JAVA_HOME to SEARCH_PATH
if [ "$JAVA_HOME" != "" ]; then
   SEARCH_PATH="$JAVA_HOME $SEARCH_PATH"
fi


############################################################################
# Setting local flags
# Do not modified followings
############################################################################

# flags for local use
# Do not modified these variable
SETUP=0
JRE=0
JAI=0
J3D=0
JAVA_DIRECTORY=""


############################################################################
# Search Java VM with JAI & Java 3D
############################################################################

for spath in $SEARCH_PATH
do


# JVM/JRE search run when JAVA_DIRECTORY is not set
if [ "$JAVA_DIRECTORY" == "" ]; then

  # find jre directory
  for dir in `find $spath -name 'jre*' -type d | sort -r `
  do
    # when JAVA_DIRECTORY already found, through search loop
    if [ "$JAVA_DIRECTORY" == "" ]; then
      # java command exists?
      if [ -f $dir/bin/java ]; then
        # java version check
        if [ `$dir/bin/java -version 2>&1 1>/dev/null | grep 1.5 | wc -l` -gt 0 ]; then
          JRE=1
          # JAI check
          if [ -f "$dir/lib/ext/jai_core.jar" ]; then
            if [ "$VERCHK" == "true" ]; then
              # version check
              # CURRENT_JAI version
              echo $dir/lib/ext/jai_core.jar
              CURRENT_JAI=`unzip -p $dir/lib/ext/jai_core.jar META-INF/MANIFEST.MF | grep "Implementation-Version" | sed -e "s/Implementation-Version: //" | sed -e "s/\r//g"`

              CJAI_CURRENT=`echo $CURRENT_JAI | sed -e "s/_//g" | sed -e "s/\.//g"`
              CJAI_VERSION=`echo $JAI_VERSION | sed -e "s/_//g" | sed -e "s/\.//g"`

              # Version Calcuration
              lcurrent=`expr length $CJAI_CURRENT`
              lversion=`expr length $CJAI_VERSION`
              if [ `expr $lcurrent - $lversion` -gt 0 ]; then
                while [ `expr $lcurrent - $lversion` != 0 ]
                do
                  CJAI_VERSION=`expr $CJAI_VERSION \* 10`
                  lcurrent=`expr $lcurrent - 1`
                done
              elif [ `expr $lcurrent - $lversion` -lt 0 ]; then
                while [ `expr $lcurrent - $lversion` != 0 ]
                do
                  CJAI_CURRENT=`expr $CJAI_CURRENT \* 10`
                  lversion=`expr $lversion - 1`
                done
              fi

              # compare version between current and required
              if [ $CJAI_CURRENT -ge $CJAI_VERSION ]; then
                JAI=2
              else
                JAI=0
              fi 
            else
              JAI=1
            fi
          fi
          # Java3D check
          if [ -f "$dir/lib/ext/j3dcore.jar" ]; then
            if [ "$VERCHK" == "true" ]; then
              # version check
              # CURRENT_J3D version
              CURRENT_J3D=`unzip -p $dir/lib/ext/j3dcore.jar META-INF/MANIFEST.MF | grep "Implementation-Version" | sed -e "s/Implementation-Version: //" | sed -e "s/\r//g" `

              CJ3D_VERSION=`echo $JAVA3D_VERSION | sed -e "s/_//g" | sed -e "s/\.//g"`
              CJ3D_CURRENT=`echo $CURRENT_J3D | sed -e "s/_//g" | sed -e "s/\.//g"`

              # Version Calcuration
              lcurrent=`expr length $CJ3D_CURRENT`
              lversion=`expr length $CJ3D_VERSION`
              #echo Java3D check
              if [ `expr $lcurrent - $lversion` -gt 0 ]; then
                while [ `expr $lcurrent - $lversion` != 0 ]
                do
                  CJ3D_VERSION=`expr $CJ3D_VERSION \* 10`
                  lcurrent=`expr $lcurrent - 1`
                done
              elif [ `expr $lcurrent - $lversion` -lt 0 ]; then
                while [ `expr $lcurrent - $lversion` != 0 ]
                do
                  CJ3D_CURRENT=`expr $CJ3D_CURRENT \* 10`
                  lversion=`expr $lversion - 1`
                done
              fi

              # compare version between current and required
              if [ $CJ3D_CURRENT -ge $CJ3D_VERSION ]; then
                J3D=2
              else
                J3D=0
              fi 
            else
              J3D=1
            fi
          fi
          if [ $JAI -gt 0 ]; then
            if [ $J3D -gt  0 ]; then
              # set JAVA_DIRECTORY
              JAVA_DIRECTORY="$dir"
              echo "Find JDK/JRE 1.5 envieonments as follows"
              echo "Directory : $dir"
              if [ $JAI == 2 ]; then
                echo "JAI version : $CURRENT_JAI (>= $JAI_VERSION)"
              else
                echo "JAI found!! : Version Check Skipped."
              fi
              if [ $J3D == 2 ]; then
                echo "Java3D version : $CURRENT_J3D (>= $JAVA3D_VERSION)"
              else
                echo "Java3D found!! : Version Check Skipped."
              fi
              SETUP=1
            fi
          fi
        fi
      fi
    fi
  done

fi # if [ "$JAVA_DIRECTORY" ]

done # for spath in $SEARCH_PATH

if [ $SETUP -eq 0 ]; then
  if [ $JRE -eq 0 ]; then
    echo "JDK/JRE 1.5 cannot found."
    echo "Please install JDK/JRE, JAI, Java3D and run /usr/sbin/lg3d-setup"
    echo "before run /usr/bin/lg3d-dev, /usr/bin/lg3d-session"
  else
    echo "JDK/JRE 1.5 found, but JAI or Java3D cannot found into JDK/JRE 1.5 directory."
    echo "Please install JAI or Java3D or both and run /usr/sbin/lg3d-setup"
    echo "before run /usr/bin/lg3d-dev, /usr/bin/lg3d-session"
  fi
  exit;
fi


cat << DEVEOF > $BIN_PREFIX/lg3d-dev
#!/bin/bash -f
export JAVA_HOME=$JAVA_DIRECTORY
export PATH="$JAVA_DIRECTORY/bin:\$PATH"

pkill=/usr/bin/pkill
if [ -x /usr/bin/pkill ]; then
  pkill=/usr/bin/pkill
elif [ -x /usr/bin/killall ]; then
  pkill=/usr/bin/killall
fi

$LG3D_PREFIX/bin/lg3d-dev \$@

\$pkill rmiregistry

DEVEOF

chmod 755 $BIN_PREFIX/lg3d-dev

cat << APPEOF > $BIN_PREFIX/lg3d-app
#!/bin/bash -f
export JAVA_HOME=$JAVA_DIRECTORY
export PATH="$JAVA_DIRECTORY/bin:\$PATH"

pkill=/usr/bin/pkill
if [ -x /usr/bin/pkill ]; then
  pkill=/usr/bin/pkill
elif [ -x /usr/bin/killall ]; then
  pkill=/usr/bin/killall
fi

$LG3D_PREFIX/bin/lg3d-app \$@

\$pkill rmiregistry

APPEOF

chmod 755 $BIN_PREFIX/lg3d-app

cat << SESSIONEOF > $BIN_PREFIX/lg3d-session
#!/bin/bash -f
export JAVA_HOME=$JAVA_DIRECTORY
export PATH="$JAVA_DIRECTORY/bin:\$PATH"

pkill=/usr/bin/pkill
if [ -x /usr/bin/pkill ]; then
  pkill=/usr/bin/pkill
elif [ -x /usr/bin/killall ]; then
  pkill=/usr/bin/killall
fi

# User check...

if [ \`/usr/bin/id | /usr/bin/grep 'uid=0(root)' | /usr/bin/wc -l\` = 0 ]; then
  echo Only root can execute \$0.
  exit 1;
fi

# console check
if [ \`/usr/bin/tty | grep tty |  wc -l\` -eq 0 ]; then
  echo "\$0 run on tty(console) mode only."
  echo "Push Ctrl-Alt-F1 key and you can move tty0, and retry."
  exit 1;
fi


# gdm check...
if [ \`/bin/ps -e | /usr/bin/grep gdm | /usr/bin/wc -l\` -gt 0 ]; then
  echo "gdm is running."
  echo "To use lg3d-session, it is nesesarry to shutdown gdm."
  echo "Are you OKAY to shutdown gdm? [y ... shutdown]"
  read input
  if [ "\$input" = "y" ]; then
   echo Shutdown gdm ...
   \$pkill gdm
  else
   exit 1;
  fi
elif [ \`/bin/ps -e | /usr/bin/grep X | /usr/bin/wc -l\` -gt 0 ]; then
  echo "X server is running."
  echo "To use lg3d-session, it is nesesarry to shutdown X server."
  echo "Are you OKAY to shutdown X? [y ... shutdown]"
  read input
  if [ "\$input" = "y" ]; then
   echo Shutdown gdm ...
   \$pkill X
  else
   exit 1;
  fi
fi

$LG3D_PREFIX/bin/lg3d-session \$@

\$pkill rmiregistry

SESSIONEOF

chmod 755 $BIN_PREFIX/lg3d-dev


