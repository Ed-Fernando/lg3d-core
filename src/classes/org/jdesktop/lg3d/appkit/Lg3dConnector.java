/**
 * Project Looking Glass
 *
 * $RCSfile: Lg3dConnector.java,v $
 *
 * Copyright (c) 2004, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * $Revision: 1.5 $
 * $Date: 2007-05-23 16:17:01 $
 * $State: Exp $
 */
package org.jdesktop.lg3d.appkit;

import java.util.concurrent.Semaphore;
import java.util.logging.LogManager;
import java.util.logging.Logger;
import javax.media.j3d.Canvas3D;
import org.jdesktop.lg3d.displayserver.AppConnectorPrivate;
import org.jdesktop.lg3d.displayserver.PlatformConfig;
import org.jdesktop.lg3d.displayserver.UniverseFactory;
import org.jdesktop.lg3d.wg.Frame3D;

/**
 * Prototype LgAppkit 
 *
 * @author  paulby
 */
public class Lg3dConnector extends javax.swing.JPanel {

    private AppConnectorPrivate appConnector;
    private static Lg3dConnector connector = null;
    private Semaphore lg3dStarted = new Semaphore(0);
    private Lg3dStartupListener startupListener;
    
    private Canvas3D[] canvas3ds=null;

    /** Creates new form Lg3dConnector */
    public Lg3dConnector(Lg3dStartupListener listener) {
        startupListener = listener;
        initComponents();
        startLG3D();
    }
    
//    /**
//     * @deprecated
//     */
//    public void waitForStartup() {
//        try {
//            System.out.println("Waiting for lg3d to start");
//            lg3dStarted.acquire();
//        } catch (InterruptedException ex) {
//            ex.printStackTrace();
//        }
//    }
    
    /**
     *  Get the set of canvases created from the configuration.
     * 
     *  If using ConfiguredUniverse config files each canvas will already
     *  be attached to a jwindow or jframe. If not then the the caller is 
     *  responsible for attaching the canvas(es) to a visible jwindow or jframe
     **/
    public Canvas3D[] getCanvases() {
        return canvas3ds;
    }

    private void startLG3D() {        
        System.setProperty("j3d.sortShape3DBounds", "true");
        UniverseFactory ufi = PlatformConfig.getConfig().getUniverseFactory();
        UniverseFactory.addUniverseListener( new UniverseFactory.UniverseListener() {

           public void universeCreated( Canvas3D[] c3d ) {
               canvas3ds = c3d;
               if (c3d[0].getParent()==null) {
                   // If the canvas does not have parent assume we are in single
                   // screen mode and attach it to this jpanel.
                   Lg3dConnector.this.add("Center",c3d[0]);
                   Lg3dConnector.this.validate(); // Required for X11
               }
               appConnector = AppConnectorPrivate.getAppConnector();
               if (startupListener!=null)
                    startupListener.showPanel();
           } 
        });
        
        Thread main = new Thread() {
            public void run() {
                org.jdesktop.lg3d.displayserver.Main.main(null);
//                lg3dStarted.release();
                if (startupListener!=null)
                    startupListener.startupComplete();
            }
        };

        main.start();
    }    

    public static Lg3dConnector getConnector(Lg3dStartupListener listener) {
        if (connector==null)
            connector = new Lg3dConnector(listener);
        return connector;
    }
    
    /**
     * @deprecated
     */
    public static Lg3dConnector getConnector() {       
        return getConnector(null);
    }
    
    public void addFrame3D(Frame3D frame) {
        appConnector.addFrame3D(frame);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents

    private void initComponents() {



        setLayout(new java.awt.BorderLayout());



    }// </editor-fold>//GEN-END:initComponents

 
    // Variables declaration - do not modify//GEN-BEGIN:variables

    // End of variables declaration//GEN-END:variables

    public interface Lg3dStartupListener {
        
        /**
         * Attach the panel to it's frame and make it visible. This is important
         * as lg3d uses the Panel size for lots of initial calculations.
         */
        public void showPanel();
        
        /**
         * Startup is complete
         */
        public void startupComplete();
    }
}

